input {
  beats {
      port => "5044"
  }
}

filter {
  if [container][image][name] =~ /mysql/ {
    # Apply processing for MySQL logs
    grok {
      match => {
        "message" => "%{TIMESTAMP_ISO8601:timestamp} %{NUMBER:thread_id} \[%{WORD:level}\] %{GREEDYDATA:new_message}"
      }
    }
    # grok successful?
    # this method is safe because we avoid writing nil message when grok fails
    if [new_message] {
      mutate {
        replace => { "message" => "%{new_message}" }
        remove_field => ["new_message"]
      }
    }
    # Translate log levels if needed
    if [level] == "Note" {
      mutate { replace => { "level" => "info"} }
    }
    if [level] == "Warning" {
      mutate { replace => { "level" => "warn"} }
    }
    date {
      match => ["timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }
}
output  {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "logstash-oncall-%{+yyyy.MM.dd}"
  }
  if [container][image][name] =~ /mysql/ {
  stdout {
    codec => rubydebug
  }
}
}
